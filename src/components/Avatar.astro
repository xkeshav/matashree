---
export interface Props {
  name: string;
  size?: number;
  className?: string;
  bgColor?: string;
}

const { name, size = 50, className = '', bgColor } = Astro.props;

// Function to get initials from name
function getInitials(fullName: string): string {
  return fullName
    .split(' ')
    .map((word) => word.charAt(0))
    .join('')
    .toUpperCase()
    .slice(0, 2);
}

// Function to generate color from name
function generateColor(str: string): string {
  if (bgColor) return bgColor;

  let hash = 0;
  for (let i = 0; i < str.length; i++) {
    hash = str.charCodeAt(i) + ((hash << 5) - hash);
  }

  const colors = ['#FF6B35', '#F7931E', '#FFD23F', '#06FFA5', '#3742FA', '#5F27CD', '#FF3838', '#FF9FF3', '#54A0FF', '#5F27CD', '#00D2D3', '#FF9F43', '#EE5A24', '#0097E6', '#8C7AE6'];

  return colors[Math.abs(hash) % colors.length];
}

const initials = getInitials(name);
const backgroundColor = generateColor(name);
const isLightColor = (color: string) => {
  const hex = color.replace('#', '');
  const r = parseInt(hex.substr(0, 2), 16);
  const g = parseInt(hex.substr(2, 2), 16);
  const b = parseInt(hex.substr(4, 2), 16);
  const brightness = (r * 299 + g * 587 + b * 114) / 1000;
  return brightness > 155;
};
const textColor = isLightColor(backgroundColor) ? '#333' : '#fff';
---

<div
  class={`avatar ${className}`}
  style={`
    width: ${size}px; 
    height: ${size}px; 
    background-color: ${backgroundColor}; 
    color: ${textColor};
    font-size: ${size * 0.4}px;
  `}
  title={name}
>
  {initials}
</div>

<style>
  .avatar {
    border-radius: 50%;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    font-family: 'Inter', sans-serif;
    user-select: none;
    flex-shrink: 0;
    border: 2px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .avatar:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .avatar::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .avatar:hover::before {
    opacity: 1;
  }

  /* Size variants */
  .avatar.small {
    width: 32px !important;
    height: 32px !important;
    font-size: 12px !important;
  }

  .avatar.medium {
    width: 50px !important;
    height: 50px !important;
    font-size: 18px !important;
  }

  .avatar.large {
    width: 80px !important;
    height: 80px !important;
    font-size: 28px !important;
  }

  .avatar.xl {
    width: 120px !important;
    height: 120px !important;
    font-size: 42px !important;
  }
</style>
